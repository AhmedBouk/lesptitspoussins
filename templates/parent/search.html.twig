{% extends 'base.html.twig' %}

{% block body %}

    {{ parent() }}
    {% if data is defined %}

        <div class="container-fluid">
            <div class="row ">
                <div class="col-md-3">
                </div>
                <div class="col-md-6 mt-xl-5">
                    <p class="mt-xl-3">a</p>
                    <h2 class="mt-xl-5 text-center">Tous les proffessionels du {{ cp }}</h2>
                    <div id="mapid" class="mt-xl-5 mx-auto mb-5"></div>
                </div>
                <div class="col-md-3">
                </div>
            </div>
        </div>





    <script>


        var tab = [];

        {% for request in data %}

        tab.push( {
                "features":

                    [
                {
                    "geometry": {
                        "type": "Point",
                        "coordinates": [
                               {{ request.long }},
                               {{ request.lat }}
                        ]
                    },
                    "type": "Feature",
                    "properties": {
                        "popupContent": "{{ request.infra }}"
                    }


                }
                    ]

        });
        {% endfor %}


        console.log(tab);


        var map = L.map('mapid').setView([{{ lat }}, {{ lon }}], 13);

        L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {
            maxZoom: 18,
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, ' +
                '<a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
                'Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
            id: 'mapbox.streets'
        }).addTo(map);



        function onEachFeature(feature, layer) {
            var popupContent = "<a href= '{{ path('') }}'> lien </a>";

            if (feature.properties && feature.properties.popupContent) {
                popupContent += feature.properties.popupContent;
            }

            layer.bindPopup(popupContent);
        }



        tab.forEach(function (element) {

            L.geoJSON([element], {

                style: function (feature) {
                    return feature.properties && feature.properties.style;
                },

                onEachFeature: onEachFeature,

                pointToLayer: function (feature, latlng) {
                    return L.circleMarker(latlng, {
                        radius: 8,
                        fillColor: "#ff7800",
                        color: "#000",
                        weight: 1,
                        opacity: 1,
                        fillOpacity: 0.8
                    });
                }
            }).addTo(map);

        })

    </script>
{% else %}

        <h2 style="margin-top: 100px">COUCOU</h2>


    {% endif %}


{% endblock body %}